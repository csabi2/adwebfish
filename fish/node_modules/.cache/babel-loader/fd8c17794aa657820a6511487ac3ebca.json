{"ast":null,"code":"import React from \"react\";\nimport EventEmitter from 'events';\nimport dispatcher from \"../dispatchers/Dispatcher\";\nimport fishermanStore from \"./FishermanStore\";\nimport locationStore from \"./Locations\";\nimport MessageActions from \"../actions/MessageActions\";\n\nconst axios = require('axios');\n\nclass CatchStore extends EventEmitter {\n  constructor(...args) {\n    super(...args);\n    this._catches = [];\n  }\n\n  emitChange() {\n    this.emit('change');\n  }\n\n  addChangeListener(callback) {\n    this.addListener('change', callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener('change', callback);\n  }\n\n}\n\ndispatcher.register(action => {\n  if (action.command.commandType === 'POST_CATCH') {\n    let item = action.command.item;\n    axios.post('http://localhost:3001/catches', {\n      fisherman: item.fisherman,\n      location: item.location,\n      timestamp: new Date(Date.now()).toISOString(),\n      weight: item.weight,\n      species: item.species\n    }).then(res => {\n      console.log(res);\n      MessageActions.toggleMessage({\n        show: true,\n        text: `Catch registered!`\n      });\n      catchStore.emitChange();\n    }).catch(err => {\n      console.log(err);\n    });\n  } else if (action.command.commandType === 'GET_CATCH') {\n    let params = action.command.params;\n    axios.get('http://localhost:3001/catches' + queryParams(params)).then(res => {\n      console.log(res.data);\n      var result = [];\n      res.data.forEach((value, index) => {\n        var fisherman = fishermanStore._fishermen.filter(item => item.id === value.fisherman);\n\n        var location = locationStore._locations.filter(item => item.id === value.location);\n\n        result.push({\n          id: value.id,\n          fisherman: fisherman[0],\n          location: location[0],\n          timestamp: value.timestamp.replace('T', ' ').substring(0, value.timestamp.length - 8),\n          weight: value.weight,\n          species: value.species\n        });\n      });\n      catchStore._catches = result;\n      console.log(result);\n      console.log(\"Catches loaded\");\n      catchStore.emitChange();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n});\nconst catchStore = new CatchStore();\nexport default catchStore;\n\nvar queryParams = params => {\n  if (params) {\n    var fisherman = params.fisherman ? 'fisherman=' + params.fisherman + '&' : '';\n    var location = params.location ? 'location=' + params.location + '&' : '';\n    var weight = params.weight ? 'weight=' + params.weight + '&' : '';\n    var species = params.species ? 'species=' + params.species + '&' : '';\n    var toReturn = fisherman + location + weight + species;\n    toReturn = toReturn.length > 1 && toReturn.charAt(toReturn.length - 1) === '&' ? toReturn.substring(0, toReturn.length - 1) : toReturn;\n    return toReturn ? '?' + toReturn : '';\n  } else {\n    return '';\n  }\n};","map":{"version":3,"sources":["/home/wwitdtstl/Desktop/AdvancedWeb/myfisherman/fish/src/store/Catches.js"],"names":["React","EventEmitter","dispatcher","fishermanStore","locationStore","MessageActions","axios","require","CatchStore","_catches","emitChange","emit","addChangeListener","callback","addListener","removeChangeListener","removeListener","register","action","command","commandType","item","post","fisherman","location","timestamp","Date","now","toISOString","weight","species","then","res","console","log","toggleMessage","show","text","catchStore","catch","err","params","get","queryParams","data","result","forEach","value","index","_fishermen","filter","id","_locations","push","replace","substring","length","toReturn","charAt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport EventEmitter from 'events';\nimport dispatcher from \"../dispatchers/Dispatcher\";\nimport fishermanStore from \"./FishermanStore\";\nimport locationStore from \"./Locations\";\nimport MessageActions from \"../actions/MessageActions\";\nconst axios = require('axios');\n\nclass CatchStore extends EventEmitter{\n    _catches = [];\n\n    emitChange(){\n        this.emit('change')\n    }\n\n    addChangeListener(callback){\n        this.addListener('change',callback);\n    }\n\n    removeChangeListener(callback){\n        this.removeListener('change', callback);\n    }\n\n\n}\n\n\ndispatcher.register((action) => {\n    if(action.command.commandType === 'POST_CATCH'){\n        let item = action.command.item;\n        axios.post('http://localhost:3001/catches', {\n            fisherman: item.fisherman,\n            location: item.location,\n            timestamp: new Date(Date.now()).toISOString(),\n            weight: item.weight,\n            species: item.species\n        })\n            .then((res) => {\n                console.log(res);\n                MessageActions.toggleMessage({\n                    show: true,\n                    text: `Catch registered!`\n                });\n                catchStore.emitChange();\n\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    else if(action.command.commandType === 'GET_CATCH'){\n        let params = action.command.params;\n        axios.get('http://localhost:3001/catches' + queryParams(params))\n            .then((res) => {\n                console.log(res.data);\n                var result = [];\n                res.data.forEach((value, index) => {\n                    var fisherman = fishermanStore._fishermen.filter((item) => item.id === value.fisherman);\n                    var location = locationStore._locations.filter((item) => item.id === value.location);\n                    result.push({\n                        id: value.id,\n                        fisherman: fisherman[0],\n                        location: location[0],\n                        timestamp: value.timestamp.replace('T', ' ').substring(0, value.timestamp.length - 8),\n                        weight: value.weight,\n                        species: value.species\n                    });\n\n                });\n                catchStore._catches = result;\n                console.log(result);\n                console.log(\"Catches loaded\");\n                catchStore.emitChange();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n});\n\nconst catchStore = new CatchStore();\nexport default catchStore;\n\n\nvar queryParams = (params) => {\n    if(params){\n        var fisherman = params.fisherman ? 'fisherman=' + params.fisherman + '&' : '';\n        var location = params.location ? ('location=' + params.location + '&') : '';\n        var weight = params.weight ? 'weight=' + params.weight + '&' : '';\n        var species = params.species ? 'species=' + params.species + '&' : '';\n        var toReturn = fisherman + location + weight + species;\n        toReturn = toReturn.length > 1 && toReturn.charAt(toReturn.length -1) === '&' ? toReturn.substring(0, toReturn.length - 1) : toReturn;\n        return toReturn ? '?' + toReturn : '';\n    }\n    else {\n        return ''\n    }\n};"]},"metadata":{},"sourceType":"module"}